
Alternative statistical approaches may include autoregressive models for data with high amounts of autocorrelation [@eltahir2004dynamic]. This would allow to statistically model the planning process of consecutive of bigrams in first order autoregressive models or even trigrams with second order autoregressive models. Further, we assumed log-normal distributions for all models tested. An alternative approach to this are ex-Gaussian and the shifted Wald distribution which have been used for response-time data in psychological research [see @matzke2009psychological].



he stability of the inter-keystroke interval duration is illustrate in Figure \ref{fig:retest}. Importantly the densities of session one and two are perfectly overlapping for each copy-task component.


```{r warning = FALSE, fig_test_retest, fig.pos="!h", fig.width=6.7, fig.height=6.5, fig.align = "center", fig.cap="\\label{fig:retest}Test-retest reliability for 239 participants that took part in a two copy-task session. The overlap of the densities illustrates that inter-keystroke intervals did not vary for the second session. For visualisation only, the data were capped at 2,500msecs."}
d.sess2 %>% 
  filter(IKI > 0, IKI < 2500) %>% 
  mutate(component = mapvalues(component, from = levels(d.sess2$component), to = ctc)) %>%
  mutate(component = factor(component, levels = ctc, ordered = T)) %>%
  mutate(session = session + 1) %>%
  mutate(session = paste0("Session ", session)) %>%
  ggplot(aes(x = IKI, 
             color = factor(session)
             , linetype = factor(session)
             #fill = factor(session) 
             )) + 
#  geom_histogram(aes(y=..density..), alpha = .3, bins = 60,  position="identity", fill="white", color = "grey" ) + 
  geom_density(aes(y=..density..), alpha = .3, size =.5 ) +
  ylab(" ") + 
  xlab("IKI (in ms)") + 
  theme_linedraw() +
  facet_wrap(~component, scales = "free") +
  scale_color_hue(name = "", c =70, l = 40) +
  scale_linetype_manual("", values = c("solid", "dashed")) +
#  ggtitle(paste0("N participants = ", subj_left)) +
  theme(axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        axis.line.y = element_blank(),
        legend.key=element_blank(),
        legend.position= "top", 
        legend.justification = "right",
        legend.text = element_text(size = 12),
        legend.title = element_text(size = 12, face = "bold"),
        legend.background = element_rect(fill = "transparent", colour = "transparent"),
        text = element_text(size = 12),
        plot.title = element_text(margin=margin(b = 1, unit = "pt"), hjust = 1)) 

```
d.aggr %>%
  mutate(component = ifelse(component %in% c("HF", "LF"), 
                            paste0(component, " bigrams"), 
                            as.character(component))) %>%
  mutate(component = factor(component, levels = c("Tapping", "Sentence", "HF bigrams", "LF bigrams", "Consonants"), ordered = T)) -> plot_aggr

plot_aggr %>%  ggplot(aes(x = IKI)) +
    geom_histogram(aes(y = ..density..), binwidth=50) +
    geom_density(fill="red", alpha = 0.2) +
  #  geom_density( aes(y=..density..), fill = "grey50", color = "transparent" ) +
    labs(y = "Density",
         x = "IKI in msecs") + 
    facet_wrap(~component, scales = "free", shrink = F) +
    theme_linedraw() +
    theme(#axis.title.y=element_blank(),
          panel.grid = element_blank()
          #axis.text.y=element_blank(),
          #axis.ticks.y=element_blank(),
          #axis.line.y = element_blank()
          ) +
  scale_x_continuous(breaks = seq(0, 3500, 1000), limits = c(0, 2500))
